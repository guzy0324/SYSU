(define (domain magic-world)
   (:requirements :strips :typing)
   (:types player location monster element chest)
   (:predicates
     (at ?p -player ?l -location)
     (border ?l1 ?l2 -location)
     (guarded ?l -location)
     (open ?c -chest)
     (fire ?e -element)
     (in ?e -element ?c -chest)
     (empty ?c -chest)
     (has-fire ?p -player)
     (earth ?e -element)
     (has-earth ?p -player)
     (has-fireball ?p -player)
    )
   (:action move
      :parameters (?p -player ?l1 -location ?l2 -location)
      :precondition (and (at ?p ?l1) (border ?l1 ?l2) (not (guarded ?l2)))
      :effect (and (at ?p ?l2) (not (at ?p ?l1)))
   )
   (:action attack
      :parameters (?p -player ?m -monster ?l1 -location ?l2 -location)
      :precondition (and (at ?p ?l1) (at ?m ?l2) (border ?l1 ?l2) (guarded ?l2))
      :effect (and (not (at ?m ?l2)) (not (guarded ?l2)))
   )
   (:action open
      :parameters (?p -player ?c -chest ?l1 -location)
      :precondition (and (at ?p ?l1) (at ?c ?l1) (not (open ?c)))
      :effect (and (open ?c))
   )
   (:action collect-fire
      :parameters (?p -player ?c -chest ?l1 -location ?e -element)
      :precondition (and (at ?p ?l1) (at ?c ?l1) (open ?c) (fire ?e) (in ?e ?c) (not (empty ?c))
      :effect (and (empty ?c) (has-fire ?p))
   )
   (:action collect-earth
      :parameters (?p -player ?c -chest ?l1 -location ?e -element)
      :precondition (and (at ?p ?l1) (at ?c ?l1) (open ?c) (earth ?e) (in ?e ?c) (not (empty ?c))
      :effect (and (empty ?c) (has-earth ?p))
   )
   (:action build-fireball
      :parameters (?p -player)
      :precondition (and (has-fire ?p) (has-earth ?p))
      :effect (and (has-fireball ?p) (not (has-fire ?p)) (not (has-earth ?p)))
   )
)