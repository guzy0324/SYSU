`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer: 
// 
// Create Date: 2019/11/20 14:37:18
// Design Name: 
// Module Name: regFile
// Project Name: 
// Target Devices: 
// Tool Versions: 
// Description: 
// 
// Dependencies: 
// 
// Revision:
// Revision 0.01 - File Created
// Additional Comments:
// 
//////////////////////////////////////////////////////////////////////////////////


module regFile(
    input clk,
    input [3:0] Addr,		//寄存器地址编码 
    output [31:0] instruction// 寄存器的值
);//寄存器地址都是 4 位二进制数，因为寄存器只有 16 个，4 位就能表示所有寄存器
reg [31:0] regs [0:15]; // 寄存器组
reg [31:0] instruction;
integer i = 0;
always @( posedge clk ) // 时钟上升沿操作
begin
    instruction = regs[i] ; //  取指令
    i = i + 1;
    if (i == 16) i = 0;
end
initial 
begin
    regs[3]  = 32'b00000000001000100001100000101011;// add
    regs[2]  = 32'b00000000001000100001100000101010;// addu
    regs[1]  = 32'b00000000001000100001100000100001;// slt
    regs[0]  = 32'b00000000001000100001100000100000;// sltu
    regs[4]  = 32'b00000000001000000000000000001000;// jr
    regs[5]  = 32'b00100000001000100001100000101010;// addi
    regs[6]  = 32'b00100100001000100001100000101010;// addiu
    regs[7]  = 32'b00111100000000100001100000101010;// lui
    regs[8]  = 32'b10001100001000100001100000101010;// lw
    regs[9]  = 32'b10101100001000100001100000101010;// sw
    regs[10]  = 32'b00010000001000100001100000101010;//beq
    regs[11]  = 32'b00010100001000100001100000101010;//bne
    regs[12]  = 32'b00101000001000100001100000101010;// slti
    regs[13]  = 32'b00101100001000100001100000101010;// addi
    regs[14]  = 32'b00001000001000100001100000101010;//j
    regs[15]  = 32'b00001100001000100001100000101010;//jal
end
endmodule 
